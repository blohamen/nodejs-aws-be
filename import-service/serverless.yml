service: import-service

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::import-service-bucket"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::import-service-bucket/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - "arn:aws:sqs:eu-west-1:574986945474:catalogItemsQueue"

custom:
  authArn: ${cf:authorization-service-dev.authArn}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude:
        - csv-parser

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

functions:
  importProductsFile:
    handler: src/handlers/importProductsFile/index.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: ${self:custom.authArn}
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: src/handlers/importFileParser/index.importFileParser
    events:
      - s3:
          bucket: import-service-bucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
